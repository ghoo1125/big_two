char s[1];

void decode(card x)
{   
  if(x.num==3)
   strcpy(s,"3");
  else if(x.num==4)
   strcpy(s,"4"); 
  else if(x.num==5)
   strcpy(s,"5"); 
  else if(x.num==6)
   strcpy(s,"6"); 
  else if(x.num==7)
   strcpy(s,"7"); 
  else if(x.num==8)
   strcpy(s,"8");            
  else if(x.num==9)
   strcpy(s,"9");
  else if(x.num==10)
   strcpy(s,"10");      
  else if(x.num==11)
   strcpy(s,"J"); 
  else if(x.num==12)
   strcpy(s,"Q");  
  else if(x.num==13)
   strcpy(s,"K");            
  else if(x.num==14)
   strcpy(s,"A"); 
  else if(x.num==15)
   strcpy(s,"2"); 
}

//---------------------------------------------------------
void printcard(card x[5],int &jx,int turn,int &pass,int &t0,int &t1,int &t2,card p[13],int s0)
{
 setbkcolor(0);
 setfillstyle(0,0);
 

char s1[10]="FunckyJon";
char s2[10]="smartKi";
char s3[10]="fatmow"; 
             
char s4[10]="Rod";
char s5[10]="xrr";
char s6[10]="Gun";
char s7[10]="DGG";
      
 cleardevice();
 settextstyle(8,0,2);
 setcolor(13);
 outtextxy(500,430,"[esc] to quit"); 
 setcolor(15);
 
 
 if(s0==1) 
 outtextxy(2,570,s4);
 else if(s0==2)
 outtextxy(2,570,s5);
 else if(s0==3)
 outtextxy(2,570,s6);
 else if(s0==4)
 outtextxy(2,570,s7);
 
 outtextxy(10,30,s1);
 outtextxy(580,10,s2);
 outtextxy(710,460,s3);
 settextstyle(8,0,4);
 for(int i=0;i<t0;i++)
  rectangle(10,60+30*i,60,90+30*i);
 for(int i=0;i<t1;i++)
  rectangle(540-i*30,10,570-i*30,60);
 for(int i=0;i<t2;i++)
  rectangle(740,420-30*i,790,450-30*i);  
 for(int i=0;i<13;i++)  //ª±®aªºµP  
  if(p[i].sw==52)
  {
    rectangle(i*50+65,480,i*50+115,560);              
    if(p[i].cardsuit==1)
    {
      setcolor(2);  
      fillellipse(50*i+85,500,5,5);
      fillellipse(50*i+85,500,4,4);
      fillellipse(50*i+85,500,3,3);
      fillellipse(50*i+85,500,2,2);
      fillellipse(50*i+85,500,1,1);
      line(50*i+84,499,50*i+86,499);
      fillellipse(50*i+79,507,5,5);
      fillellipse(50*i+79,507,4,4);
      fillellipse(50*i+79,507,3,3);
      fillellipse(50*i+79,507,2,2);
      fillellipse(50*i+79,507,1,1);
      line(50*i+78,506,50*i+80,506);
      line(50*i+78,507,50*i+80,507);
      fillellipse(50*i+91,507,5,5);
      fillellipse(50*i+91,507,4,4);
      fillellipse(50*i+91,507,3,3);
      fillellipse(50*i+91,507,2,2);
      fillellipse(50*i+91,507,1,1);
      line(50*i+90,506,50*i+92,506);
      line(50*i+90,507,50*i+92,507);
      line(50*i+83,500,50*i+83,515);
      line(50*i+84,500,50*i+84,515);
      line(50*i+85,500,50*i+85,515);
      line(50*i+86,500,50*i+86,515);
      line(50*i+79,514,50*i+91,514);  
      line(50*i+79,515,50*i+91,515);   
      setcolor(15);   
    }
    if(p[i].cardsuit==2)
    {
      setcolor(4);
      moveto(50*i+88,495);
      lineto(50*i+98,505);
      lineto(50*i+88,515);
      lineto(50*i+78,505);
      lineto(50*i+88,495);    
      line(50*i+78,505,50*i+78,505);
      line(50*i+79,504,50*i+79,506); 
      line(50*i+80,503,50*i+80,507); 
      line(50*i+81,502,50*i+81,508);       
      line(50*i+82,501,50*i+82,509);
      line(50*i+83,500,50*i+83,510);
      line(50*i+84,499,50*i+84,511);
      line(50*i+85,498,50*i+85,512); 
      line(50*i+86,497,50*i+86,513);
      line(50*i+87,496,50*i+87,514);
      line(50*i+88,495,50*i+88,515);  
      line(50*i+98,505,50*i+98,505);
      line(50*i+97,504,50*i+97,506); 
      line(50*i+96,503,50*i+96,507); 
      line(50*i+95,502,50*i+95,508);       
      line(50*i+94,501,50*i+94,509);
      line(50*i+93,500,50*i+93,510);
      line(50*i+92,499,50*i+92,511);
      line(50*i+91,498,50*i+91,512); 
      line(50*i+90,497,50*i+90,513);
      line(50*i+89,496,50*i+89,514);
      setcolor(15);    
    }
    if(p[i].cardsuit==3)
    {         
      setcolor(4);          
      fillellipse(50*i+80,501,5,5);
      fillellipse(50*i+80,501,4,4);
      fillellipse(50*i+80,501,3,3);
      fillellipse(50*i+80,501,2,2);
      fillellipse(50*i+80,501,1,1);
      fillellipse(50*i+90,501,5,5);
      fillellipse(50*i+90,501,4,4);
      fillellipse(50*i+90,501,3,3);
      fillellipse(50*i+90,501,2,2);
      fillellipse(50*i+90,501,1,1);
      line(50*i+78,499,50*i+92,499);
      line(50*i+78,500,50*i+92,500); 
      line(50*i+75,501,50*i+95,501);
      line(50*i+75,502,50*i+95,502);
      line(50*i+75,503,50*i+95,503);
      line(50*i+76,504,50*i+94,504);
      line(50*i+77,505,50*i+93,505);
      line(50*i+78,506,50*i+92,506);
      line(50*i+79,507,50*i+91,507);
      line(50*i+80,508,50*i+90,508);
      line(50*i+81,509,50*i+89,509);
      line(50*i+82,510,50*i+88,510);
      line(50*i+83,511,50*i+87,511);
      line(50*i+84,512,50*i+86,512);
      line(50*i+85,513,50*i+85,513);   
      setcolor(15);            
    }
    if(p[i].cardsuit==4)
    {                
      setcolor(2);                 
      line(50*i+84,495,50*i+84,495);
      line(50*i+83,496,50*i+85,496);
      line(50*i+82,497,50*i+86,497);
      line(50*i+81,498,50*i+87,498);
      line(50*i+80,499,50*i+88,499);
      line(50*i+79,500,50*i+89,500);  
      line(50*i+78,501,50*i+90,501);
      line(50*i+77,502,50*i+91,502);
      line(50*i+77,503,50*i+91,503); 
      fillellipse(50*i+79,507,5,5);
      fillellipse(50*i+79,507,4,4);
      fillellipse(50*i+79,507,3,3);
      fillellipse(50*i+79,507,2,2);
      fillellipse(50*i+79,507,1,1);
      line(50*i+78,506,50*i+80,506);
      line(50*i+78,507,50*i+80,507);
      fillellipse(50*i+89,507,5,5);
      fillellipse(50*i+89,507,4,4);
      fillellipse(50*i+89,507,3,3);
      fillellipse(50*i+89,507,2,2);
      fillellipse(50*i+89,507,1,1);
      line(50*i+88,506,50*i+91,506);
      line(50*i+88,507,50*i+91,507);  
      line(50*i+90,506,50*i+92,506);
      line(50*i+90,507,50*i+92,507);
      line(50*i+83,500,50*i+83,515);
      line(50*i+84,500,50*i+84,515);
      line(50*i+78,514,50*i+90,514);  
      line(50*i+78,515,50*i+90,515);  
      setcolor(15);              
    }  
             
    decode(p[i]);
    outtextxy(i*50+70,520,s);                      
  }    

if(turn%4==0 && pass==1)       
outtextxy(70,240,"pass!!");
else if(turn%4==0)
 {
  settextstyle(5,0,5);
  outtextxy(70,240,"¡ö");
  settextstyle(8,0,4);
 }
if(turn%4==1 && pass==1)
  outtextxy(330,120,"pass!!");
else if(turn%4==1)
 {
  settextstyle(5,0,5);
  outtextxy(350,120,"¡ô");
  settextstyle(8,0,4);
 }
if(turn%4==2 && pass==1)
  outtextxy(610,240,"pass!!");
else if(turn%4==2)
 {
  settextstyle(5,0,5);
  outtextxy(630,250,"¡÷");
  settextstyle(8,0,4);
 }
if(turn%4==3 && pass==1)
outtextxy(330,440,"pass!!");
 int i=1;    
if(jx==1)
{ 
  decode(x[0]);        
  rectangle(360,230,440,370);
  outtextxy(390,310,s);
           
    if(x[0].cardsuit==1)
    {
      setcolor(2);  
      fillellipse(400,280,5,5);
      fillellipse(400,280,4,4);
      fillellipse(400,280,3,3);
      fillellipse(400,280,2,2);
      fillellipse(400,280,1,1);
      line(399,279,401,279);
      fillellipse(394,287,5,5);  
      fillellipse(394,287,4,4);
      fillellipse(394,287,3,3);
      fillellipse(394,287,2,2);
      fillellipse(394,287,1,1);
      line(393,286,395,286);
      line(393,287,395,287);
      fillellipse(406,287,5,5);
      fillellipse(406,287,4,4);
      fillellipse(406,287,3,3);
      fillellipse(406,287,2,2);
      fillellipse(406,287,1,1);
      line(405,286,407,286);
      line(405,287,407,287);
      line(398,280,398,295);
      line(399,280,399,295);
      line(400,280,400,295);
      line(401,280,401,295);
      line(394,294,406,294);  
      line(394,295,406,295);    
      setcolor(15);  
    }
    if(x[0].cardsuit==2)
    {                 
      setcolor(4);
      moveto(400,275);
      lineto(410,285);
      lineto(400,295);
      lineto(390,285);
      lineto(400,275);    
      line(390,285,390,285);
      line(391,284,391,286); 
      line(392,283,392,287); 
      line(393,282,393,288);       
      line(394,281,394,289);
      line(395,280,395,290);
      line(396,279,396,291);
      line(397,278,397,292); 
      line(398,277,398,293);
      line(399,276,399,294);
      line(400,275,400,295);  
      line(410,285,410,285);
      line(409,284,409,286); 
      line(408,283,408,287); 
      line(407,282,407,288);       
      line(406,281,406,289);
      line(405,280,405,290);
      line(404,279,404,291);
      line(403,278,403,292); 
      line(402,277,402,293);
      line(401,276,401,294);
      setcolor(15);
    }
    if(x[0].cardsuit==3)
    {         
      setcolor(4);          
      fillellipse(395,281,5,5);
      fillellipse(395,281,4,4);
      fillellipse(395,281,3,3);
      fillellipse(395,281,2,2);
      fillellipse(395,281,1,1);
      fillellipse(405,281,5,5);
      fillellipse(405,281,4,4);
      fillellipse(405,281,3,3);
      fillellipse(405,281,2,2);
      fillellipse(405,281,1,1);
      line(394,280,406,280);
      line(394,281,406,281);
      line(390,282,410,282);
      line(390,283,410,283);
      line(390,284,410,284);
      line(391,285,409,285);
      line(392,286,408,286);
      line(393,287,407,287);
      line(394,288,406,288);
      line(395,289,405,289);
      line(396,290,404,290);
      line(397,291,403,291);
      line(398,292,402,292);
      line(399,293,401,293);
      line(400,294,400,294);
      setcolor(15);  
                   
    }
    if(x[0].cardsuit==4)
    {                 
      setcolor(2);  
      line(400,273,400,273);
      line(399,274,401,274);
      line(398,275,402,275);
      line(397,276,403,276);
      line(396,277,404,277);
      line(395,278,405,278);  
      line(394,279,406,279);
      line(393,280,407,280);
      line(393,281,407,281); 
      fillellipse(395,285,5,5);
      fillellipse(395,285,4,4);
      fillellipse(395,285,3,3);
      fillellipse(395,285,2,2);
      fillellipse(395,285,1,1);
      fillellipse(405,285,5,5);
      fillellipse(405,285,4,4);
      fillellipse(405,285,3,3);
      fillellipse(405,285,2,2);
      fillellipse(405,285,1,1);
      line(394,284,407,284);
      line(394,285,407,285);
      line(405,286,407,286);
      line(405,287,407,287);
      line(398,280,398,295);
      line(399,280,399,295);
      line(400,280,400,295);
      line(401,280,401,295);
      line(394,294,406,294);  
      line(394,295,406,295);  
      setcolor(15);                
    }                             
} 
 else if(jx==2)
 {      
  for(int i=0;i<2;i++)
  {
  if(x[i].cardsuit==1)
    {
      setcolor(2);  
      fillellipse(360+80*i,280,5,5);
      fillellipse(360+80*i,280,4,4);
      fillellipse(360+80*i,280,3,3);
      fillellipse(360+80*i,280,2,2);
      fillellipse(360+80*i,280,1,1);
      line(359+80*i,279,361+80*i,279);
      fillellipse(354+80*i,287,5,5);  
      fillellipse(354+80*i,287,4,4);
      fillellipse(354+80*i,287,3,3);
      fillellipse(354+80*i,287,2,2);
      fillellipse(354+80*i,287,1,1);
      line(353+80*i,286,355+80*i,286);
      line(353+80*i,287,355+80*i,287);
      fillellipse(366+80*i,287,5,5);
      fillellipse(366+80*i,287,4,4);
      fillellipse(366+80*i,287,3,3);
      fillellipse(366+80*i,287,2,2);
      fillellipse(366+80*i,287,1,1);
      line(365+80*i,286,367+80*i,286);
      line(365+80*i,287,367+80*i,287);
      line(358+80*i,280,358+80*i,295);
      line(359+80*i,280,359+80*i,295);
      line(360+80*i,280,360+80*i,295);
      line(361+80*i,280,361+80*i,295);
      line(354+80*i,294,366+80*i,294);  
      line(354+80*i,295,366+80*i,295);  
      setcolor(15);    
    }
    if(x[i].cardsuit==2)
    {
      setcolor(4);                  
      moveto(360+80*i,275);
      lineto(370+80*i,285);
      lineto(360+80*i,295);
      lineto(350+80*i,285);
      lineto(360+80*i,275);    
      line(350+80*i,285,350+80*i,285);
      line(351+80*i,284,351+80*i,286); 
      line(352+80*i,283,352+80*i,287); 
      line(353+80*i,282,353+80*i,288);       
      line(354+80*i,281,354+80*i,289);
      line(355+80*i,280,355+80*i,290);
      line(356+80*i,279,356+80*i,291);
      line(357+80*i,278,357+80*i,292); 
      line(358+80*i,277,358+80*i,293);
      line(359+80*i,276,359+80*i,294);
      line(360+80*i,275,360+80*i,295);  
      line(370+80*i,285,370+80*i,285);
      line(369+80*i,284,369+80*i,286); 
      line(368+80*i,283,368+80*i,287); 
      line(367+80*i,282,367+80*i,288);       
      line(366+80*i,281,366+80*i,289);
      line(365+80*i,280,365+80*i,290);
      line(364+80*i,279,364+80*i,291);
      line(363+80*i,278,363+80*i,292); 
      line(362+80*i,277,362+80*i,293);
      line(361+80*i,276,361+80*i,294);    
      setcolor(15);
    }
    if(x[i].cardsuit==3)
    {         
      setcolor(4);          
      fillellipse(355+80*i,281,5,5);
      fillellipse(355+80*i,281,4,4);
      fillellipse(355+80*i,281,3,3);
      fillellipse(355+80*i,281,2,2);
      fillellipse(355+80*i,281,1,1);
      fillellipse(365+80*i,281,5,5);
      fillellipse(365+80*i,281,4,4);
      fillellipse(365+80*i,281,3,3);
      fillellipse(365+80*i,281,2,2);
      fillellipse(365+80*i,281,1,1);
      line(354+80*i,280,366+80*i,280);
      line(354+80*i,281,366+80*i,281);
      line(350+80*i,282,370+80*i,282);
      line(350+80*i,283,370+80*i,283);
      line(350+80*i,284,370+80*i,284);
      line(351+80*i,285,369+80*i,285);
      line(352+80*i,286,368+80*i,286);
      line(353+80*i,287,367+80*i,287);
      line(354+80*i,288,366+80*i,288);
      line(355+80*i,289,365+80*i,289);
      line(356+80*i,290,364+80*i,290);
      line(357+80*i,291,363+80*i,291);
      line(358+80*i,292,362+80*i,292);
      line(359+80*i,293,361+80*i,293);
      line(360+80*i,294,360+80*i,294);    
      setcolor(15);        
    }
    if(x[i].cardsuit==4)
    {                
      setcolor(2);                 
      line(360+80*i,273,360+80*i,273);
      line(359+80*i,274,361+80*i,274);
      line(358+80*i,275,362+80*i,275);
      line(357+80*i,276,363+80*i,276);
      line(356+80*i,277,364+80*i,277);
      line(355+80*i,278,365+80*i,278);  
      line(354+80*i,279,366+80*i,279);
      line(353+80*i,280,367+80*i,280);
      line(353+80*i,281,367+80*i,281); 
      fillellipse(355+80*i,285,5,5);
      fillellipse(355+80*i,285,4,4);
      fillellipse(355+80*i,285,3,3);
      fillellipse(355+80*i,285,2,2);
      fillellipse(355+80*i,285,1,1);
      fillellipse(365+80*i,285,5,5);
      fillellipse(365+80*i,285,4,4);
      fillellipse(365+80*i,285,3,3);
      fillellipse(365+80*i,285,2,2);
      fillellipse(365+80*i,285,1,1);
      line(354+80*i,284,367+80*i,284);
      line(354+80*i,285,367+80*i,285);
      line(365+80*i,286,367+80*i,286);
      line(365+80*i,287,367+80*i,287);
      line(358+80*i,280,358+80*i,295);
      line(359+80*i,280,359+80*i,295);
      line(360+80*i,280,360+80*i,295);
      line(361+80*i,280,361+80*i,295);
      line(354+80*i,294,366+80*i,294);  
      line(354+80*i,295,366+80*i,295);  
      setcolor(15);                  
    }                  
   }     
  rectangle(400,230,480,370);
  decode(x[0]);
  outtextxy(430,310,s);
  rectangle(320,230,400,370);
  decode(x[1]);
  outtextxy(350,310,s);
 }
 else if(jx==5)    
 {
  for(int i=0;i<5;i++)
  {
  if(x[i].cardsuit==1)
    {
      setcolor(2);  
      fillellipse(400+80*(i-2),280,5,5);
      fillellipse(400+80*(i-2),280,4,4);
      fillellipse(400+80*(i-2),280,3,3);
      fillellipse(400+80*(i-2),280,2,2);
      fillellipse(400+80*(i-2),280,1,1);
      line(399+80*(i-2),279,401+80*(i-2),279);
      fillellipse(394+80*(i-2),287,5,5);  
      fillellipse(394+80*(i-2),287,4,4);
      fillellipse(394+80*(i-2),287,3,3);
      fillellipse(394+80*(i-2),287,2,2);
      fillellipse(394+80*(i-2),287,1,1);
      line(393+80*(i-2),286,395+80*(i-2),286);
      line(393+80*(i-2),287,395+80*(i-2),287);
      fillellipse(406+80*(i-2),287,5,5);
      fillellipse(406+80*(i-2),287,4,4);
      fillellipse(406+80*(i-2),287,3,3);
      fillellipse(406+80*(i-2),287,2,2);
      fillellipse(406+80*(i-2),287,1,1);
      line(405+80*(i-2),286,407+80*(i-2),286);
      line(405+80*(i-2),287,407+80*(i-2),287);
      line(398+80*(i-2),280,398+80*(i-2),295);
      line(399+80*(i-2),280,399+80*(i-2),295);
      line(400+80*(i-2),280,400+80*(i-2),295);
      line(401+80*(i-2),280,401+80*(i-2),295);
      line(394+80*(i-2),294,406+80*(i-2),294);  
      line(394+80*(i-2),295,406+80*(i-2),295);   
      setcolor(15);   
    }
    if(x[i].cardsuit==2)
    {
      setcolor(4);                  
      moveto(400+80*(i-2),275);
      lineto(410+80*(i-2),285);
      lineto(400+80*(i-2),295);
      lineto(390+80*(i-2),285);
      lineto(400+80*(i-2),275);    
      line(390+80*(i-2),285,390+80*(i-2),285);
      line(391+80*(i-2),284,391+80*(i-2),286); 
      line(392+80*(i-2),283,392+80*(i-2),287); 
      line(393+80*(i-2),282,393+80*(i-2),288);       
      line(394+80*(i-2),281,394+80*(i-2),289);
      line(395+80*(i-2),280,395+80*(i-2),290);
      line(396+80*(i-2),279,396+80*(i-2),291);
      line(397+80*(i-2),278,397+80*(i-2),292); 
      line(398+80*(i-2),277,398+80*(i-2),293);
      line(399+80*(i-2),276,399+80*(i-2),294);
      line(400+80*(i-2),275,400+80*(i-2),295);  
      line(410+80*(i-2),285,410+80*(i-2),285);
      line(409+80*(i-2),284,409+80*(i-2),286); 
      line(408+80*(i-2),283,408+80*(i-2),287); 
      line(407+80*(i-2),282,407+80*(i-2),288);       
      line(406+80*(i-2),281,406+80*(i-2),289);
      line(405+80*(i-2),280,405+80*(i-2),290);
      line(404+80*(i-2),279,404+80*(i-2),291);
      line(403+80*(i-2),278,403+80*(i-2),292); 
      line(402+80*(i-2),277,402+80*(i-2),293);
      line(401+80*(i-2),276,401+80*(i-2),294); 
      setcolor(15);   
    }
    if(x[i].cardsuit==3)
    {         
      setcolor(4);          
      fillellipse(395+80*(i-2),281,5,5);
      fillellipse(395+80*(i-2),281,4,4);
      fillellipse(395+80*(i-2),281,3,3);
      fillellipse(395+80*(i-2),281,2,2);
      fillellipse(395+80*(i-2),281,1,1);
      fillellipse(405+80*(i-2),281,5,5);
      fillellipse(405+80*(i-2),281,4,4);
      fillellipse(405+80*(i-2),281,3,3);
      fillellipse(405+80*(i-2),281,2,2);
      fillellipse(405+80*(i-2),281,1,1);
      line(394+80*(i-2),280,406+80*(i-2),280);
      line(394+80*(i-2),281,406+80*(i-2),281);
      line(390+80*(i-2),282,410+80*(i-2),282);
      line(390+80*(i-2),283,410+80*(i-2),283);
      line(390+80*(i-2),284,410+80*(i-2),284);
      line(391+80*(i-2),285,409+80*(i-2),285);
      line(392+80*(i-2),286,408+80*(i-2),286);
      line(393+80*(i-2),287,407+80*(i-2),287);
      line(394+80*(i-2),288,406+80*(i-2),288);
      line(395+80*(i-2),289,405+80*(i-2),289);
      line(396+80*(i-2),290,404+80*(i-2),290);
      line(397+80*(i-2),291,403+80*(i-2),291);
      line(398+80*(i-2),292,402+80*(i-2),292);
      line(399+80*(i-2),293,401+80*(i-2),293);
      line(400+80*(i-2),294,400+80*(i-2),294);   
      setcolor(15);         
    }
    if(x[i].cardsuit==4)
    {                
      setcolor(2);                 
      line(400+80*(i-2),273,400+80*(i-2),273);
      line(399+80*(i-2),274,401+80*(i-2),274);
      line(398+80*(i-2),275,402+80*(i-2),275);
      line(397+80*(i-2),276,403+80*(i-2),276);
      line(396+80*(i-2),277,404+80*(i-2),277);
      line(395+80*(i-2),278,405+80*(i-2),278);  
      line(394+80*(i-2),279,406+80*(i-2),279);
      line(393+80*(i-2),280,407+80*(i-2),280);
      line(393+80*(i-2),281,407+80*(i-2),281); 
      fillellipse(395+80*(i-2),285,5,5);
      fillellipse(395+80*(i-2),285,4,4);
      fillellipse(395+80*(i-2),285,3,3);
      fillellipse(395+80*(i-2),285,2,2);
      fillellipse(395+80*(i-2),285,1,1);
      fillellipse(405+80*(i-2),285,5,5);
      fillellipse(405+80*(i-2),285,4,4);
      fillellipse(405+80*(i-2),285,3,3);
      fillellipse(405+80*(i-2),285,2,2);
      fillellipse(405+80*(i-2),285,1,1);
      line(394+80*(i-2),284,407+80*(i-2),284);
      line(394+80*(i-2),285,407+80*(i-2),285);
      line(405+80*(i-2),286,407+80*(i-2),286);
      line(405+80*(i-2),287,407+80*(i-2),287);
      line(398+80*(i-2),280,398+80*(i-2),295);
      line(399+80*(i-2),280,399+80*(i-2),295);
      line(400+80*(i-2),280,400+80*(i-2),295);
      line(401+80*(i-2),280,401+80*(i-2),295);
      line(394+80*(i-2),294,406+80*(i-2),294);  
      line(394+80*(i-2),295,406+80*(i-2),295);       
      setcolor(15);          
    }                  
   }     
  rectangle(200,230,280,370);
  decode(x[0]);
  outtextxy(230,310,s);
  rectangle(280,230,360,370);
  decode(x[1]);
  outtextxy(310,310,s);
  rectangle(360,230,440,370);
  decode(x[2]);
  outtextxy(390,310,s);
  rectangle(440,230,520,370);
  decode(x[3]);
  outtextxy(470,310,s);
  rectangle(520,230,600,370);  
  decode(x[4]);
  outtextxy(550,310,s);  
 }      
}
